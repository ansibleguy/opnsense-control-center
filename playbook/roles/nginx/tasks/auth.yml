---

- name: OPN-CC | Nginx | Auth | Copying public web-files (1/2)
  ansible.builtin.template:
    src: "templates/var/local/lib/opn-cc/web/{{ item }}.j2"
    dest: "{{ OPNCC.path.data.web }}/{{ item }}"
    mode: 0640
    owner: 'root'
    group: 'www-data'
  loop:
    - '401.html'

- name: OPN-CC | Nginx | Auth | Copying public web-files (2/2)
  ansible.builtin.copy:
    src: "templates/var/local/lib/opn-cc/web/{{ item }}"
    dest: "{{ OPNCC.path.data.web }}/{{ item }}"
    mode: 0640
    owner: 'root'
    group: 'www-data'
  loop:
    - 'favicon.png'

- name: OPN-CC | Nginx | Auth | Copying Authentication-service files
  ansible.builtin.template:
    src: "templates/var/local/lib/opn-cc/auth/{{ item }}.j2"
    dest: "{{ OPNCC.path.data.auth }}/{{ item }}"
    mode: 0650
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
  notify: Restart-auth
  loop:
    - 'config.py'

- name: OPN-CC | Nginx | Auth | Copying Authentication-service files (2/2)
  ansible.builtin.copy:
    src: "templates/var/local/lib/opn-cc/auth/{{ item }}"
    dest: "{{ OPNCC.path.data.auth }}/{{ item }}"
    mode: 0650
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
  notify: Restart-auth
  loop:
    - 'main.py'
    - 'session.py'
    - 'crypto.py'
    - 'util.py'
    - 'type_ldap.py'
    - 'type_pam.py'
    - 'type_multi.py'
    - 'templates/login.html'

- name: OPN-CC | Nginx | Auth | Installing python3-virtualenv
  ansible.builtin.pip:
    name: 'virtualenv'
    state: present

- name: OPN-CC | Nginx | Auth | Writing requirements to file
  ansible.builtin.copy:
    content: |
      # ansible_managed
      # ansibleguy: opnsense-control-center
      {% for req in OPNCC_NGINX_AUTH.pip_requirements %}
      {{ req }}
      {% endfor %}
    dest: "{{ OPNCC.path.data.auth }}/requirements.txt"
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
    mode: 0640

- name: OPN-CC | Nginx | Auth | Installing python3 modules into venv
  ansible.builtin.pip:
    requirements: "{{ OPNCC.path.data.auth }}/requirements.txt"
    virtualenv: "{{ OPNCC.path.data.auth }}/venv"
    state: present
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Setting privileges on virutalenv
  ansible.builtin.file:
    path: "{{ OPNCC.path.data.auth }}/venv"
    state: directory
    mode: 0750
    recurse: true
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"

- name: OPN-CC | Nginx | Auth | Authentication service
  ansible.builtin.template:
    src: "templates/etc/systemd/system/opn-cc-auth.service.j2"
    dest: '/etc/systemd/system/opn-cc-auth.service'
    mode: 0644
    owner: 'root'
    group: 'root'
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Installing TOTP Dependencies
  ansible.builtin.apt:
    name: ['libpam-google-authenticator', 'qrencode']
    state: present
  when: OPNCC_AUTH.type.user == 'totp' or OPNCC_AUTH.type.token == 'totp'
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Allowing service-user to authenticate system users
  ansible.builtin.user:
    name: "{{ OPNCC.users.auth }}"
    groups: 'shadow'
    append: true
  when: OPNCC_AUTH.type.user == 'system'
  notify: Restart-auth

# NOTE: we can't use 'setcap' on a link
# todo: but this also means the python-version won't be auto-updated
- name: OPN-CC | Nginx | Auth | Change virutalenv python to be standalone binary
  ansible.builtin.copy:
    src: '/usr/bin/python3'
    remote_src: true
    dest: "{{ OPNCC.path.data.auth }}/venv/bin/python"
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
    mode: 0750
  when: OPNCC_AUTH.type.user == 'totp' or OPNCC_AUTH.type.token == 'totp'
  notify: Restart-auth

# NOTE: to fix 'libpam-google-authenticator' errors:
#  'Failed to change group id for user ...'
#  'Failed to change user id to ...' (would be 'cap_setuid')
- name: OPN-CC | Nginx | Auth | Allowing service-user privileges for TOTP authentication
  community.general.capabilities:
    path: "{{ OPNCC.path.data.auth }}/venv/bin/python"
    capability: 'cap_setgid+eip'
    state: present
  when: OPNCC_AUTH.type.user == 'totp' or OPNCC_AUTH.type.token == 'totp'
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Adding TOTP PAM-Module
  ansible.builtin.template:
    src: "templates/etc/pam.d/opncc-auth-totp.j2"
    dest: "/etc/pam.d/{{ OPNCC_NGINX_AUTH.pam_file.totp }}"
    mode: 0644
    owner: 'root'
    group: 'root'

- name: OPN-CC | Nginx | Auth | Adding System-Auth PAM-Module
  ansible.builtin.template:
    src: "templates/etc/pam.d/opncc-auth-system.j2"
    dest: "/etc/pam.d/{{ OPNCC_NGINX_AUTH.pam_file.system }}"
    mode: 0644
    owner: 'root'
    group: 'root'

- name: OPN-CC | Nginx | Auth | Adding LDAP config
  ansible.builtin.copy:
    content: "{{ OPNCC_AUTH.ldap | to_nice_yaml(indent=2, sort_keys=false) }}"
    dest: "{{ OPNCC_NGINX_AUTH.ldap_config_file }}"
    mode: 0600
    owner: "{{ OPNCC.users.auth }}"
    group: "{{ OPNCC.users.auth }}"

- name: OPN-CC | Nginx | Auth | Enabling & Starting service
  ansible.builtin.systemd:
    name: 'opn-cc-auth.service'
    enabled: true
    daemon_reload: true
    state: started
