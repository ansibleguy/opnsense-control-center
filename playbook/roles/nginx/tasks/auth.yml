---

- name: OPN-CC | Nginx | Auth | Copying public web-files (1/2)
  ansible.builtin.template:
    src: "templates/var/local/lib/opn-cc/web/{{ item }}.j2"
    dest: "{{ OPNCC.path.data.web }}/{{ item }}"
    mode: 0640
    owner: 'root'
    group: 'www-data'
  loop:
    - '401.html'

- name: OPN-CC | Nginx | Auth | Copying public web-files (2/2)
  ansible.builtin.copy:
    src: "templates/var/local/lib/opn-cc/web/{{ item }}"
    dest: "{{ OPNCC.path.data.web }}/{{ item }}"
    mode: 0640
    owner: 'root'
    group: 'www-data'
  loop:
    - 'favicon.png'

- name: OPN-CC | Nginx | Auth | Copying Authentication-service files
  ansible.builtin.template:
    src: "templates/var/local/lib/opn-cc/auth/{{ item }}.j2"
    dest: "{{ OPNCC.path.data.auth }}/{{ item }}"
    mode: 0650
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
  notify: Restart-auth
  loop:
    - 'config.py'

- name: OPN-CC | Nginx | Auth | Copying Authentication-service files (2/2)
  ansible.builtin.copy:
    src: "templates/var/local/lib/opn-cc/auth/{{ item }}"
    dest: "{{ OPNCC.path.data.auth }}/{{ item }}"
    mode: 0650
    owner: 'root'
    group: "{{ OPNCC.users.auth }}"
  notify: Restart-auth
  loop:
    - 'main.py'
    - 'session.py'
    - 'util.py'
    - 'type_ldap.py'
    - 'type_pam.py'
    - 'type_totp.py'
    - 'type_system.py'
    - 'templates/login.html'

- name: OPN-CC | Nginx | Auth | Installing SQLite3
  ansible.builtin.apt:
    name: 'sqlite3'
    state: present

- name: OPN-CC | Nginx | Auth | Installing python3-virtualenv
  ansible.builtin.pip:
    name: 'virtualenv'
    state: present

- name: OPN-CC | Nginx | Auth | Installing python3 modules into venv
  ansible.builtin.pip:
    name: ['flask', 'waitress', 'db-sqlite3', 'ldap3', 'python-pam']
    virtualenv: "{{ OPNCC.path.data.auth }}/venv"
    state: present
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Session Database (sqlite)
  ansible.builtin.command: "sqlite3 -line {{ OPNCC_NGINX_AUTH.session.db }}
  'CREATE TABLE {{ OPNCC_NGINX_AUTH.session.table }} (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  time REAL,
  user TEXT,
  token TEXT
  );'"
  args:
    creates: "{{ OPNCC_NGINX_AUTH.session.db }}"

- name: OPN-CC | Nginx | Auth | Session Database privileges
  ansible.builtin.file:
    state: touch
    access_time: preserve
    modification_time: preserve
    path: "{{ OPNCC_NGINX_AUTH.session.db }}"
    mode: 0640
    owner: "{{ OPNCC.users.auth }}"
    group: "{{ OPNCC.users.auth }}"

- name: OPN-CC | Nginx | Auth | Cron for session-cleanup
  ansible.builtin.cron:
    cron_file: 'opncc'
    name: 'OPNCC-AUTH Session Cleanup'
    minute: 0
    hour: '*'
    user: "{{ OPNCC.users.auth }}"
    job: "curl -i -XPOST http://127.0.0.1:{{ OPNCC_VARS.port.auth }}/{{ OPNCC_VARS.url.auth }}/cleanup"

- name: OPN-CC | Nginx | Auth | Authentication service
  ansible.builtin.template:
    src: "templates/etc/systemd/system/opn-cc-auth.service.j2"
    dest: '/etc/systemd/system/opn-cc-auth.service'
    mode: 0644
    owner: 'root'
    group: 'root'
  notify: Restart-auth

- name: OPN-CC | Nginx | Auth | Installing TOTP Dependencies
  ansible.builtin.apt:
    name: ['libpam-google-authenticator', 'qrencode']
    state: present
  when: OPNCC_AUTH.type == 'totp'  # todo: MFA

- name: OPN-CC | Nginx | Auth | Adding TOTP PAM-Module
  ansible.builtin.template:
    src: "templates/etc/pam.d/opncc-auth-totp.j2"
    dest: "/etc/pam.d/{{ OPNCC_NGINX_AUTH.pam_file.totp }}"
    mode: 0644
    owner: 'root'
    group: 'root'

- name: OPN-CC | Nginx | Auth | Adding System-Auth PAM-Module
  ansible.builtin.template:
    src: "templates/etc/pam.d/opncc-auth-system.j2"
    dest: "/etc/pam.d/{{ OPNCC_NGINX_AUTH.pam_file.system }}"
    mode: 0644
    owner: 'root'
    group: 'root'

- name: OPN-CC | Nginx | Auth | Adding LDAP config
  ansible.builtin.copy:
    content: "{{ OPNCC_AUTH.ldap | to_nice_yaml(indent=2, sort_keys=false) }}"
    dest: "{{ OPNCC_NGINX_AUTH.ldap_config_file }}"
    mode: 0600
    owner: "{{ OPNCC.users.auth }}"
    group: "{{ OPNCC.users.auth }}"

- name: OPN-CC | Nginx | Auth | Enabling & Starting service
  ansible.builtin.systemd:
    name: 'opn-cc-auth.service'
    enabled: true
    daemon_reload: true
    state: started
