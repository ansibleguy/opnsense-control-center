# {{ ansible_managed }}
# ansibleguy: opnsense-control-center

server {
  listen 80;
  listen [::]:80;
  server_name _;

  # log config
  access_log syslog:server=unix:/dev/log,tag=nginx_opncc,nohostname,severity=info combined;
  error_log  syslog:server=unix:/dev/log,tag=nginx_opncc,nohostname,severity=error;

  # redirect all to secure connection
  location / {
    return 301 https://$host$request_uri;
  }

}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name _;

  # ssl config
  ssl_certificate_key '/etc/nginx/ssl/opncc.key';
  ssl_certificate     '/etc/nginx/ssl/opncc.chain.crt';  # should use the certificate chain => top is server cert; bottom root cert
  ssl_trusted_certificate '/etc/nginx/ssl/ca.crt';
  ssl_stapling off;
  ssl_stapling_verify off;

  # global config
  autoindex off;
  server_tokens off;
  proxy_pass_request_headers on;
  proxy_connect_timeout 150;
  proxy_send_timeout 100;
  proxy_read_timeout 100;
  proxy_buffers 4 32k;
  client_max_body_size 50m;
  client_body_buffer_size 128k;
  client_header_buffer_size 2k;
  client_header_timeout 5s;
  large_client_header_buffers 3 1k;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  client_body_timeout 5s;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4;

  # global headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header Referrer-Policy same-origin;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Set-Cookie "Path=/;HttpOnly;Secure;SameSite=none";

  chunked_transfer_encoding on;

  location / {
    return 301 https://$host/{{ OPNCC_VARS.url.default }};
  }
  location /{{ OPNCC_VARS.url.vcs }}/ {
    access_log syslog:server=unix:/dev/log,tag=nginx_opncc_vcs,nohostname,severity=info combined;
    error_log  syslog:server=unix:/dev/log,tag=nginx_opncc_vcs,nohostname,severity=error;

    rewrite ^/{{ OPNCC_VARS.url.vcs }}/(.*) /$1 break;
    rewrite ^/{{ OPNCC_VARS.url.vcs }}$ /$1 break;
    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.gogs.web }}$uri;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
  }
  location /{{ OPNCC_VARS.url.logserver }}/ {
    access_log syslog:server=unix:/dev/log,tag=nginx_opncc_log,nohostname,severity=info combined;
    error_log  syslog:server=unix:/dev/log,tag=nginx_opncc_log,nohostname,severity=error;

    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.graylog.web }}/{{ OPNCC_VARS.url.logserver }}/;
    proxy_set_header X-Graylog-Server-URL http://$http_host/{{ OPNCC_VARS.url.logserver }}/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
  }
  location /{{ OPNCC_VARS.url.ide }} {
    return 301 https://$host/{{ OPNCC_VARS.url.ide }}/?folder={{ OPNCC_IDE.root }};
  }
  location /{{ OPNCC_VARS.url.ide }}/ {
    access_log syslog:server=unix:/dev/log,tag=nginx_opncc_ide,nohostname,severity=info combined;
    error_log  syslog:server=unix:/dev/log,tag=nginx_opncc_ide,nohostname,severity=error;

    rewrite ^ $request_uri;
    rewrite ^/{{ OPNCC_VARS.url.ide }}(/.*) $1 break;
    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.ide }}$uri;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection upgrade;
    proxy_set_header Accept-Encoding gzip;
  }
  location /{{ OPNCC_VARS.url.ansible }}/ {
    access_log syslog:server=unix:/dev/log,tag=nginx_opncc_ans,nohostname,severity=info combined;
    error_log  syslog:server=unix:/dev/log,tag=nginx_opncc_ans,nohostname,severity=error;

    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.semaphore }};
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_buffering off;
    proxy_request_buffering off;
  }
  location /{{ OPNCC_VARS.url.ansible }}/api/ws {
    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.semaphore }}/api/ws;
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Origin "";
  }

  # authentication

  # example => must be added to all locations
  location /authtest.html {
{% if OPNCC_AUTH.type == 'oauth2' %}
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/start;
{% else %}
    auth_request /{{ OPNCC_VARS.url.auth }};
    error_page 401 = /401.html;
{% endif %}
    auth_request_set $user $upstream_http_x_auth_request_user;
    auth_request_set $email $upstream_http_x_auth_request_email;
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    proxy_set_header X-User $user;
    proxy_set_header X-Email $email;
    add_header Set-Cookie $auth_cookie;
    alias {{ OPNCC.path.data.web }}/200.html;
  }
{% if OPNCC_AUTH.type == 'oauth2' %}
    location /oauth2/ {
    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.oauth2_proxy }};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }
{% else %}
  location /{{ OPNCC_VARS.url.auth }} {
    proxy_pass http://127.0.0.1:{{ OPNCC_VARS.port.auth }};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }
  location /401.html {
    alias {{ OPNCC.path.data.web }}/401.html;
  }
{% endif %}
}
