---

- name: OPN-CC | Managing NFTables
  ansible.builtin.import_role:
    name: ansibleguy.infra_nftables
  vars:
    nftables:
      enable:
        sets: false

      tables:
        default:
          vars:
            private_ranges: ['192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8']

          limits:
            icmp_limit:
              rate: '20/second'

          chains:
            input:
              hook: 'input'
              policy: 'drop'
              rules:
                # basic security
                - {raw: "{% if OPNCC_VARS.networks.deny | default(none, true) is not none %}\
                ip saddr {{ OPNCC_VARS.networks.deny | nftables_format_list }} log prefix \"NFTables DROP DENY-NWs \" drop\
                {% endif %}"}
                - {raw: 'ct state invalid log prefix "NFTables DROP invalid states" drop'}

                # basic traffic
                - {raw: 'ct state {established, related} accept comment "Allow open sessions"'}
                - {if: 'lo', comment: 'Allow loopback traffic'}
                - {proto: 'icmp', type: 'echo-request', limit: 'icmp_limit', comment: 'Allow ICMP-Ping'}
                - {proto: 'icmp', code: 30, limit: 'icmp_limit', comment: 'Allow ICMP-Traceroute'}

                # log + allow ssh-access
                - {raw: "ct state new tcp dport {{ OPNCC_VARS.port.ssh }}\
                {% if OPNCC_VARS.networks.allow_ssh | default(none, true) is not none %}\
                 ip saddr {{ OPNCC_VARS.networks.allow_ssh | nftables_format_list }}
                {% endif %}
                log prefix \"NFTables WEB \""}
                - {raw: "ct state new tcp dport {{ OPNCC_VARS.port.ssh }} log prefix \"NFTables SSH \""}
                - {proto: 'tcp', port: "{{ OPNCC_VARS.port.ssh }}", src: "{{ OPNCC_VARS.networks.allow_ssh | default(omit) }}"}

                # log + allow web-access
                - {raw: "ct state new tcp dport { {{ OPNCC_VARS.port.http }}, {{ OPNCC_VARS.port.https }} }\
                {% if OPNCC_VARS.networks.allow_web | default(none, true) is not none %}\
                 ip saddr {{ OPNCC_VARS.networks.allow_web | nftables_format_list }}
                {% endif %}
                log prefix \"NFTables WEB \""}
                - {proto: 'tcp', port: ["{{ OPNCC_VARS.port.http }}", "{{ OPNCC_VARS.port.https }}"], src: "{{ OPNCC_VARS.networks.allow_web | default(omit) }}"}

                # log forwarding
                - {proto: ['tcp', 'udp'], port: "{{ OPNCC_VARS.port.graylog.syslog }}", comment: 'Syslog to Logserver', src: '$private_ranges'}

                # containers/internal net to opn-cc-git
                - {src: '$private_ranges', port: "{{ OPNCC_VARS.port.gogs.git }}", proto: 'tcp'}

            forward:
              hook: 'forward'
              policy: 'drop'
              # todo: wireguard network(s)
              rules:
                # basic traffic
                - {raw: 'ct state {established, related} accept comment "Allow open sessions"'}

                # access between containers
                - {if: 'br-*', of: 'br-*'}
                - {if: 'docker0', of: 'docker0'}

                # containers to opn-cc-git
                - {if: 'br-*', dest: '$private_ranges', port: "{{ OPNCC_VARS.port.gogs.git }}", proto: 'tcp'}

                # container build
                - {raw: "ct state new tcp dport { 80, 443, 123, 53, 853 } ip daddr != $private_ranges log prefix \"NFTables OUT PUBLIC \""}
                - {proto: 'tcp', port: [80, 443], dest: '!= $private_ranges', comment: 'HTTP+S for Updates'}
                - {proto: ['tcp', 'udp'], port: 123, comment: 'NTP'}
                - {proto: 'tcp', port: [53, 853], comment: 'DNS'}
                - {proto: 'udp', port: 53, comment: 'DNS'}

            output:
              hook: 'output'
              policy: 'drop'
              rules:
                # basic traffic
                - {raw: 'ct state {established, related} accept comment "Allow open sessions"'}
                - {of: 'lo', comment: 'Allow loopback traffic'}
                - {proto: 'icmp', comment: 'Allow ICMP'}

                # access to containers
                - {of: 'br-*'}

                # firewall management
                - {raw: "ct state new tcp dport {{ OPNCC_VARS.port.firewalls | nftables_format_list }} log prefix \"NFTables OUT Firewalls \""}
                - {proto: 'tcp', port: "{{ OPNCC_VARS.port.firewalls }}"}

                # system connections
                #   NOTE: could be further restricted; but we might expect to be behind a network firewall
                - {raw: "ct state new tcp dport { 80, 443, 123, 53, 853 } ip daddr != $private_ranges log prefix \"NFTables OUT PUBLIC \""}
                - {proto: 'tcp', port: [80, 443], dest: '!= $private_ranges', comment: 'HTTP+S for Updates'}
                - {proto: ['tcp', 'udp'], port: 123, comment: 'NTP'}
                - {proto: 'tcp', port: [53, 853], comment: 'DNS'}
                - {proto: 'udp', port: 53, comment: 'DNS'}

            nat:
              hook: 'postrouting'
              priority: -100
              type: 'nat'
              policy: 'accept'
              rules:
                # todo: add nat rule for client-mgmt-network to wireguard-network
                - {src: '$private_ranges', dest: '!= $private_ranges', masquerade: true}
                - {src: "{{ OPNCC_VARS.networks.opncc_prefix }}.{{ OPNCC_VARS.networks.docker_prefix }}.{{ OPNCC_VARS.networks.docker }}",
                   dest: "{{ OPNCC_VARS.networks.docker }}", masquerade: true}
