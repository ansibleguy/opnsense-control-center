---

- name: OPNSense Control Center - Setup
  hosts: localhost
  connection: local
  become: true
  gather_facts: true
  module_defaults:
    ansible.builtin.setup:
      gather_subset: ['!all', 'os_family', 'all_ipv4_addresses']

  vars:
    OPNCC_MANAGE:
      nftables: true
      logserver: true  # graylog/mongodb/opensearch stack

    OPNCC_AUTH:  # todo: MFA
      type:
        user: 'system'  # system,ldap,oauth2,totp
        token: 'totp'  # set to 'totp' if 2FA should be used
      system:
        group: 'opncc_users'
      ldap:
        tls: true
        server: ''
        port: 636
        ca: '/etc/opn-cc/auth/ldap/ca.crt'
        use_client_cert: false
        client_cert: '/etc/opn-cc/auth/ldap/client.crt'
        client_key: '/etc/opn-cc/auth/ldap/client.key'
        client_key_pwd: ''
        base_dn: ''
        bind:
          user: ''
          pwd: ''
        filter: ''  # '(&(mail=%s)(objectClass=person)(memberOf:=CN=opncc,OU=Groups,DC=template,DC=ansibleguy,DC=net))'  # login with mail; must be in group 'opncc'
        ignore_attrs: []  # some LDAP (cloud-)providers may not support all attributes
        ip_version: 46  # 4, 46, 6, 64 or auto
        tls_version: 1.2  # 1.0, 1.1, 1.2, auto
      totp:
        path: '/etc/opn-cc/auth/totp/${USER}.key'

    OPNCC_VARS:
      domain: ''
      aliases: []
      mail_domain: ''
      admin_mail: ''

      port:
        http: 80
        https: 443
        ssh: 22
        firewalls: [443, 22]  # ports that are in use for firewall http+s
        gogs:
          web: 8001
          git: 2222
        graylog:
          web: 8002
          syslog: 5514
          opensearch:
            api: 9200
            perf: 9600
        ide: 8003
        semaphore: 8004
        auth: 8010
        oauth2_proxy: 8011

      networks:
        opncc_prefix: '10.215'  # /16 will be used!
        # todo: check any src works if unset/empty
        allow_web: ['192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8']
        allow_ssh: ['192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8']
        deny: []
        docker_prefix: '254'
        docker: '0/24'  # opncc_prefix.docker_prefix.docker
        docker_default: '240/28'  # opncc_prefix.docker_prefix.docker_default
        vpn: '0.0/20'  # opncc_prefix.vpn ; 0.0-15.255; 4093 boxes
        vpn_mgmt: '255.0/24'  # opncc_prefix.vpn_mgmt
      url:
        default: 'ide'
        ansible: 'ans'
        logserver: 'log'
        ide: 'ide'
        vcs: 'vcs'
        auth: 'auth'

    OPNCC_VERSIONS:
      gogs: 'latest'  # vcs
      logserver:
        graylog: '5.0'
        graylog_min: '5.0.7'
        mongodb: '5.0.17'
        opensearch: 'latest'
      codeserver: 'latest'  # web-ide
      semaphore: 'latest'  # ansible web-ui

  pre_tasks:
    - name: Pre-Check | Domain is set and valid
      ansible.builtin.assert:
        that:
          - OPNCC_VARS.domain | default(none, true) is not none
          - OPNCC_VARS.domain | valid_hostname

    - name: Pre-Check | Authentication-type set and valid
      ansible.builtin.assert:
        that:
          - OPNCC_AUTH.type.user in ['system', 'ldap', 'totp', 'oauth2']
          - OPNCC_AUTH.type.token in ['', 'totp']

    - name: Pre-Check | Comparing active SSH port with configured one
      ansible.builtin.shell: |
        set -o pipefail
        lsof -i -P -n | grep LISTEN | grep ssh
      register: pc_ssh
      failed_when: >
        pc_ssh.failed or
        ':' + OPNCC_VARS.port.ssh | string not in pc_ssh.stdout
      args:
        executable: '/bin/bash'
      changed_when: false
      when: OPNCC_MANAGE.nftables | bool

  roles:
    - role: nftables
      when: OPNCC_MANAGE.nftables | bool
      tags: [nftables, setup]

    - role: ansibleguy.infra_docker_minimal
      vars:
        docker:
          compose:
            enable: true
            version: '2.18.0'
          nftables:
            bridge_none: false  # build-process
            disable_iptables: true
            reload: true
          address_pool: "base={{ OPNCC_VARS.networks.opncc_prefix }}.{{ OPNCC_VARS.networks.docker_prefix }}.{{ OPNCC_VARS.networks.docker_default }},size=28"
      tags: [docker, setup]

    - role: setup
      vars:
        setup_part: 1  # nginx role depends on some setup tasks
      tags: [setup, services]

    - role: nginx
      tags: [nginx, setup, services]

    - role: setup
      vars:
        setup_part: 2
      tags: [setup, services]
